name: Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: diffx-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: diffx-windows-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: diffx-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: diffx-macos-aarch64

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      run: cargo build --package diffx-cli --release --target ${{ matrix.target }}

    - name: Create archive (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar -czf ${{ matrix.name }}.tar.gz diffx-cli
        mv ${{ matrix.name }}.tar.gz ../../../

    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ${{ matrix.name }}.zip diffx-cli.exe
        mv ${{ matrix.name }}.zip ../../../

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}
        path: |
          ${{ matrix.name }}.tar.gz
          ${{ matrix.name }}.zip
        retention-days: 5

  create-release:
    needs: build-and-upload
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ github.event.inputs.tag }} \
          --title "Release ${{ github.event.inputs.tag }}" \
          --notes "Release ${{ github.event.inputs.tag }}" \
          --draft
        
        # Upload all artifacts
        for dir in artifacts/*/; do
          if [ -d "$dir" ]; then
            for file in "$dir"*; do
              if [ -f "$file" ]; then
                gh release upload ${{ github.event.inputs.tag }} "$file"
              fi
            done
          fi
        done
