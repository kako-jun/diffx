name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version to release (e.g., v0.1.0)'
        required: true

jobs:
  build-and-upload:
    name: Build and Upload Binaries
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: diffx
            archive_name: diffx-x86_64-unknown-linux-gnu.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: diffx.exe
            archive_name: diffx-x86_64-pc-windows-msvc.zip
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: diffx
            archive_name: diffx-x86_64-apple-darwin.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: diffx
            archive_name: diffx-aarch64-apple-darwin.tar.gz

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }} --bin diffx-cli
        working-directory: ./

      - name: Prepare artifact
        shell: bash
        run: |
          # The binary is located in target/<target>/release/
          ARTIFACT_DIR=./artifact
          mkdir -p $ARTIFACT_DIR

          # Determine the source binary path
          SOURCE_BINARY="target/${{ matrix.target }}/release/${{ matrix.binary_name }}"

          # Move the binary to a staging directory
          mv "$SOURCE_BINARY" "$ARTIFACT_DIR/"

          # Create archive
          cd $ARTIFACT_DIR
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            7z a ../${{ matrix.archive_name }} .
          else
            tar -czf ../${{ matrix.archive_name }} .
          fi
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.archive_name }}
          path: ${{ matrix.archive_name }}

  create-release:
    name: Create GitHub Release
    needs: build-and-upload
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required to create a release

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: Release ${{ github.event.inputs.version }}
          body: "Release of version ${{ github.event.inputs.version }}"
          draft: false
          prerelease: false
          files: |
            artifacts/**/*
