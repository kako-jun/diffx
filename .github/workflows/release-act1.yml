name: Release Act 1 - Core

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: true
        type: string

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: diffx-linux-x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: diffx-windows-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: diffx-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: diffx-macos-aarch64

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build release binary
      run: cargo build --package diffx --release --target ${{ matrix.target }}

    - name: Create archive (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        tar -czf ${{ matrix.name }}.tar.gz diffx
        mv ${{ matrix.name }}.tar.gz ../../../

    - name: Create archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd target/${{ matrix.target }}/release
        7z a ${{ matrix.name }}.zip diffx.exe
        mv ${{ matrix.name }}.zip ../../../

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: |
          ${{ matrix.name }}.tar.gz
          ${{ matrix.name }}.zip
        retention-days: 5

  create-release:
    needs: build-and-upload
    runs-on: ubuntu-latest
    outputs:
      release-created: ${{ steps.release.outputs.created }}
      tag-name: ${{ steps.release.outputs.tag }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release
      id: release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        TAG_NAME="${{ github.event.inputs.tag || github.ref_name }}"
        echo "tag=$TAG_NAME" >> $GITHUB_OUTPUT
        
        gh release create "$TAG_NAME" \
          --title "Release $TAG_NAME" \
          --generate-notes
        
        echo "created=true" >> $GITHUB_OUTPUT
        
        # Upload all artifacts
        for dir in artifacts/*/; do
          if [ -d "$dir" ]; then
            for file in "$dir"*; do
              if [ -f "$file" ]; then
                gh release upload "$TAG_NAME" "$file"
              fi
            done
          fi
        done

  publish-crates:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Publish to crates.io
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      run: |
        # Publish core library first
        cargo publish --package diffx-core
        
        # Wait a bit for the core package to be available
        sleep 30
        
        # Publish CLI tool
        cargo publish --package diffx